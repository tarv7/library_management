---
openapi: 3.0.1
info:
  title: Library Management API
  version: v1
  description: API for managing library books, users and reservations
paths:
  "/api/v1/users":
    post:
      summary: Create a new user
      tags:
      - Users
      description: Creates a new user with the provided information. Can create both
        member and librarian users.
      parameters: []
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  email_address:
                    type: string
                    format: email
                    example: user@example.com
                  name:
                    type: string
                    example: John Doe
                  role:
                    type: string
                    enum:
                    - member
                    - librarian
                    example: member
        '422':
          description: Email already taken
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_address:
                    type: array
                    items:
                      type: string
                  password:
                    type: array
                    items:
                      type: string
                  name:
                    type: array
                    items:
                      type: string
                  role:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  "$ref": "#/components/schemas/UserInput"
              required:
              - user
servers:
- url: http://localhost:3000
  description: Development server
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email_address:
          type: string
          format: email
          example: user@example.com
        name:
          type: string
          example: John Doe
        role:
          type: string
          enum:
          - member
          - librarian
          example: member
      required:
      - email_address
      - name
      - role
    UserInput:
      type: object
      properties:
        email_address:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          minLength: 6
          example: password123
        password_confirmation:
          type: string
          minLength: 6
          example: password123
        name:
          type: string
          example: John Doe
        role:
          type: string
          enum:
          - member
          - librarian
          example: member
      required:
      - email_address
      - password
      - password_confirmation
      - name
      - role
    Error:
      type: object
      properties:
        error:
          type: string
          example: Validation failed
